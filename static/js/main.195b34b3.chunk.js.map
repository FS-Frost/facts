{"version":3,"sources":["Facts.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Facts","getFact","e","a","preventDefault","console","log","setIsLoading","setFact","fetch","response","status","time","Date","toLocaleTimeString","ok","text","error","json","useState","isLoading","fact","apiBaseUrl","repoUrl","className","onClick","disabled","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPA+DeA,MAjDf,WACI,IAAMC,EAAO,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACZD,EAAEE,iBACFC,QAAQC,IAAI,UACA,2CACZC,GAAa,GACbC,EAAQ,gBALI,SAMWC,MAHX,4CAHA,UAQY,OAFlBC,EANM,QAQCC,OARD,wBASFC,GAAO,IAAIC,MAAOC,qBACxBN,EAAQ,IAAD,OAAKI,EAAL,4CACPL,GAAa,GAXL,8BAePG,EAASK,GAfF,6BAgBRV,QAhBQ,UAgBYK,EAASM,OAhBrB,gCAgBAC,MAhBA,gBAiBRV,GAAa,GAjBL,4CAqBQG,EAASQ,OArBjB,QAqBNA,EArBM,OAsBZX,GAAa,GACbC,EAAQU,EAAKF,MAvBD,4CAAH,sDA0Bb,EAAkCG,oBAAkB,GAApD,mBAAOC,EAAP,KAAkBb,EAAlB,KACA,EAAwBY,mBAAiB,IAAzC,mBAAOE,EAAP,KAAab,EAAb,KACMc,EAAa,+BACbC,EAAU,oCAEhB,OACI,sBAAKC,UAAU,QAAf,UACI,4BAAIH,IACJ,wBAAQG,UAAU,aAAaC,QAASxB,EAASyB,SAAUN,EAA3D,yBAGA,uBACA,8CACiB,mBAAGO,KAAMJ,EAAT,SAAmBA,OAEpC,oDACuB,mBAAGI,KAAML,EAAT,SAAsBA,WCnC1CM,MAjBf,WACI,OACI,qBAAKJ,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,cAAC,EAAD,SCKDK,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.195b34b3.chunk.js","sourcesContent":["import React, { MouseEvent, useState } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"./Facts.css\";\n\ninterface FactResponse {\n    id: string;\n    text: string;\n    source: string;\n    source_url: string;\n    language: string;\n    permalink: string;\n}\n\nfunction Facts() {\n    const getFact = async (e: MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault();\n        console.log(\"Click!\");\n        const url = \"https://uselessfacts.jsph.pl/random.json\";\n        setIsLoading(true);\n        setFact(\"Searching...\");\n        const response = await fetch(url);\n\n        if (response.status === 429) {\n            const time = new Date().toLocaleTimeString();\n            setFact(`(${time}) Too many attempts! Try again later :)`);\n            setIsLoading(false);\n            return;\n        }\n\n        if (!response.ok) {\n            console.error(await response.text());\n            setIsLoading(false);\n            return;\n        }\n\n        const json = (await response.json()) as FactResponse;\n        setIsLoading(false);\n        setFact(json.text);\n    };\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [fact, setFact] = useState<string>(\"\");\n    const apiBaseUrl = \"https://uselessfacts.jsph.pl\";\n    const repoUrl = \"https://github.com/FS-Frost/facts\";\n\n    return (\n        <div className=\"Facts\">\n            <p>{fact}</p>\n            <button className=\"btn-search\" onClick={getFact} disabled={isLoading}>\n                Search fact\n            </button>\n            <br />\n            <p>\n                Source code: <a href={repoUrl}>{repoUrl}</a>\n            </p>\n            <p>\n                Useless facts API: <a href={apiBaseUrl}>{apiBaseUrl}</a>\n            </p>\n        </div>\n    );\n}\n\nexport default Facts;\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Facts from \"./Facts\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <Facts></Facts>\n                {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                <p>\n                    Edit <code>src/App.tsx</code> and save to reload again.\n                </p>\n                <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                    Learn React\n                </a> */}\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}