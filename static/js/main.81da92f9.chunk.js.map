{"version":3,"sources":["FactsClient.ts","Facts.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["getRandomFact","_x","_getRandomFact","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","language","url","wrap","_context","prev","next","concat","URL_RANDOM_FACT","abrupt","getFact","stop","getTodayFact","_x2","_getTodayFact","_callee2","_context2","URL_TODAY_FACT","_x3","_getFact","_callee3","apiResponse","body","clientResponse","_context3","fetch","sent","text","status","json","ok","console","error","JSON","parse","Facts","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","shouldShowJson","setShouldShowJson","_useState5","_useState6","fact","setFact","_useState7","_useState8","setLanguage","_useState9","_useState10","rawResponse","setRawResponse","_useState11","_useState12","factUrl","setFactUrl","showLoading","msg","hideLoading","useCallback","f","_ref","response","handleResponse","stringify","time","Date","toLocaleTimeString","permalink","useEffect","onMount","_ref2","_jsxs","className","children","_jsx","value","readOnly","onClick","disabled","htmlFor","name","onChange","e","target","type","checked","href","rel","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81da92f9.chunk.js","sourcesContent":["export async function getRandomFact(language: string): Promise<FactClientResponse> {\n    const url = `${URL_RANDOM_FACT}?language=${language}`;\n    return getFact(url);\n}\n\nexport async function getTodayFact(language: string): Promise<FactClientResponse> {\n    const url = `${URL_TODAY_FACT}?language=${language}`;\n    return getFact(url);\n}\n\nconst URL_RANDOM_FACT = \"https://uselessfacts.jsph.pl/random.json\";\nconst URL_TODAY_FACT = \"https://uselessfacts.jsph.pl/today.json\";\n\nasync function getFact(url: string): Promise<FactClientResponse> {\n    const apiResponse = await fetch(url);\n    const body = await apiResponse.text();\n\n    let clientResponse: FactClientResponse = {\n        status: apiResponse.status,\n        json: null,\n    };\n\n    if (!apiResponse.ok) {\n        console.error(body);\n        return clientResponse;\n    }\n\n    clientResponse.json = JSON.parse(body) as FactResponse;\n    return clientResponse;\n}\n\ninterface FactResponse {\n    id: string;\n    text: string;\n    source: string;\n    source_url: string;\n    language: string;\n    permalink: string;\n}\n\nexport interface FactClientResponse {\n    status: number;\n    json: FactResponse | null;\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport \"./Facts.css\";\nimport { FactClientResponse, getRandomFact, getTodayFact } from \"./FactsClient\";\n\nfunction Facts() {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const [shouldShowJson, setShouldShowJson] = useState<boolean>(false);\n    const [fact, setFact] = useState<string>(\"\");\n    const [language, setLanguage] = useState<string>(\"en\");\n    const [rawResponse, setRawResponse] = useState<string>(\"\");\n    const [factUrl, setFactUrl] = useState<string>(\"https://uselessfacts.jsph.pl\");\n\n    const showLoading = () => {\n        setIsLoading(true);\n        const msg = \"Loading...\";\n        setFact(msg);\n        setRawResponse(msg);\n    };\n\n    const hideLoading = () => {\n        setIsLoading(false);\n    };\n\n    const getFact = useCallback(() => {\n        const f = async () => {\n            showLoading();\n            const response = await getRandomFact(language);\n            handleResponse(response);\n            hideLoading();\n        };\n\n        f();\n    }, [language]);\n\n    const handleResponse = (response: FactClientResponse | undefined) => {\n        if (response == null) {\n            return;\n        }\n\n        setRawResponse(JSON.stringify(response, null, 2));\n\n        if (response.status === 429) {\n            const time = new Date().toLocaleTimeString();\n            setFact(`(${time}) Too many attempts! Try again later :)`);\n            setFactUrl(\"\");\n            return;\n        }\n\n        if (response.json == null) {\n            setFact(\"Ups, try again.\");\n            setFactUrl(\"\");\n            return;\n        }\n\n        setFact(response.json.text);\n        setFactUrl(response.json.permalink);\n    };\n\n    const toggleDebugMode = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setShouldShowJson(e.target.checked);\n    };\n\n    useEffect(() => {\n        const onMount = async () => {\n            showLoading();\n            const response = await getTodayFact(\"en\");\n            handleResponse(response);\n            hideLoading();\n        };\n\n        onMount();\n    }, []);\n\n    useEffect(() => {\n        getFact();\n    }, [getFact]);\n\n    return (\n        <div className=\"Facts\">\n            <div className=\"col mb-3 facts-search\">\n                <textarea className=\"form-control fact\" value={shouldShowJson ? rawResponse : fact} readOnly />\n            </div>\n\n            <div className=\"col mb-3 search\">\n                <button\n                    className=\"btn btn-primary w-100\"\n                    onClick={() => {\n                        getFact();\n                    }}\n                    disabled={isLoading}\n                >\n                    Next\n                </button>\n            </div>\n\n            <div className=\"input-group mb-3 w-100\">\n                <label className=\"input-group-text\" htmlFor=\"languages\">\n                    Language:{\" \"}\n                </label>\n                <select\n                    name=\"languages\"\n                    className=\"form-select\"\n                    onChange={(e) => {\n                        setLanguage(e.target.value);\n                    }}\n                >\n                    <option value=\"en\">English</option>\n                    <option value=\"de\">German</option>\n                    {/* <option value=\"random\">Surprise me</option> */}\n                </select>\n            </div>\n\n            <div className=\"input-group-text mb-3 facts-debug\">\n                <div className=\"input-group me-1 w-auto\">\n                    <input className=\"form-check-input\" type=\"checkbox\" checked={shouldShowJson} onChange={toggleDebugMode} />\n                </div>\n                <label className=\"form-check-label\">Debug mode</label>\n            </div>\n\n            <div className=\"col facts-links\">\n                <p className=\"w-100\">\n                    Fact URL:{\" \"}\n                    <a href={factUrl} target=\"_blank\" rel=\"noreferrer\">\n                        {factUrl}\n                    </a>\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default Facts;\n","import React from \"react\";\nimport \"./App.css\";\nimport Facts from \"./Facts\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <h1 className=\"mb-3 text-center\">Random Facts</h1>\n\n            <Facts></Facts>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}